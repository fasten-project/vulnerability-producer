/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.vulnerabilityproducer.utils.connections;

import com.mongodb.MongoClient;
import com.mongodb.MongoCredential;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoDatabase;

import java.util.Arrays;


public class MongoConnector {

    /**
     * Format of the connection String: mongodb://[username]@[host]:[port]/[authdb]/[dbname]
     * @param conn - String
     * @return MongoDatabase - Object to access collections
     */
    public static MongoDatabase getMongoCollection(String conn) throws Exception {
        var info = conn.split("@");
        var user = info[0].substring(10);
        var host = info[1].split(":")[0];

        info = info[1].split("/");
        var port = info[0].substring(host.length() + 1);
        var authdb = info[1];
        var dbname = info[2];
        char[] password = System.getenv("FASTEN_MONGOPASS").toCharArray();

        var credential = MongoCredential.createCredential(user, authdb, password);
        var client = new MongoClient(new ServerAddress(host, Integer.parseInt(port)),
                Arrays.asList(credential));

        // Check the connection
        client.getAddress();

        return client.getDatabase(dbname);
    }
}
