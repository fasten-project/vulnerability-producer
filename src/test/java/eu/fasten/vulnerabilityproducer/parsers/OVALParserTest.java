/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.vulnerabilityproducer.parsers;

import eu.fasten.vulnerabilityproducer.utils.Vulnerability;
import eu.fasten.vulnerabilityproducer.utils.connections.JavaHttpClient;
import eu.fasten.vulnerabilityproducer.utils.mappers.VersionRanger;
import eu.fasten.vulnerabilityproducer.utils.parsers.OVALParser;
import kotlin.Pair;
import org.apache.commons.io.FileUtils;
import org.joda.time.DateTime;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class OVALParserTest {

    JavaHttpClient clientMock = Mockito.mock(JavaHttpClient.class);
    VersionRanger vr = new VersionRanger(clientMock, "./analyzer/vulnerability-plugin/src/main/resources/trackers/package_versions.json");
    OVALParser op = new OVALParser(clientMock, vr);

    String debianXML;
    {
        try {
            debianXML = FileUtils.readFileToString(new File("./src/test/resources/parsers/debian_oval.xml"), StandardCharsets.UTF_8);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testGetVulnerabilities() throws Exception {
        // Handle request for OVAL file
        when(clientMock.sendGet("https://www.debian.org/security/oval/oval-definitions-buster.xml")).thenReturn(debianXML);
        // Handle request for VersionRanger
        List<String> versionsA2PS = new ArrayList<>();
        versionsA2PS.add("0.9");
        versionsA2PS.add("1.0");
        versionsA2PS.add("1.1");
        versionsA2PS.add("1.3");
        versionsA2PS.add("1.4");
        versionsA2PS.add("1.6");

        List<String> versionsKRB5 = new ArrayList<>();
        versionsKRB5.add("0.5");
        versionsKRB5.add("0.6");
        versionsKRB5.add("1.1");
        versionsKRB5.add("1.2");

        var versionsA = new ArrayList<Pair<String, DateTime>>();
        versionsA2PS.forEach(x -> versionsA.add(new Pair(x, null)));
        var versionsB = new ArrayList<Pair<String, DateTime>>();
        versionsKRB5.forEach(x -> versionsB.add(new Pair(x, null)));
        vr.versionsMappings.put("/deb/debian/a2ps", versionsA);
        vr.versionsMappings.put("/deb/debian/krb5", versionsB);

        // Construct the object that will be parsed
        Vulnerability v1 = new Vulnerability("CVE-2001-1593");
        v1.addPurl("pgk:deb/debian/a2ps@0.9?distro=buster");
        v1.addPurl("pgk:deb/debian/a2ps@1.0?distro=buster");
        v1.addPurl("pgk:deb/debian/a2ps@1.1?distro=buster");
        v1.addPurl("pgk:deb/debian/a2ps@1.3?distro=buster");
        v1.setPublishedDate("2014-03-31");
        v1.setDescription("\n" +
                "                        DSA-2892\n" +
                "                        Several vulnerabilities have been found in a2ps, an <q>Anything to\n" +
                "                        PostScript</q> converter and pretty-printer. The Common Vulnerabilities and\n" +
                "                        Exposures project identifies the following problems:\n" +
                "                        The spy_user function which is called when a2ps is invoked with the\n" +
                "                        --debug flag insecurely used temporary files.\n" +
                "                        Brian M. Carlson reported that a2ps's fixps script does not invoke\n" +
                "                        gs with the -dSAFER option. Consequently executing fixps on a\n" +
                "                        malicious PostScript file could result in files being deleted or\n" +
                "                        arbitrary commands being executed with the privileges of the user\n" +
                "                        running fixps.\n" +
                "                    ");

        Vulnerability v2 = new Vulnerability("CVE-2002-2443");
        v2.addPurl("pgk:deb/debian/krb5@0.5?distro=buster");
        v2.addPurl("pgk:deb/debian/krb5@0.6?distro=buster");
        v2.setPublishedDate("2013-05-29");
        v2.setDescription("\n" +
                "                        DSA-2701\n" +
                "                        It was discovered that the kpasswd service running on UDP port 464\n" +
                "                        could respond to response packets, creating a packet loop and a denial\n" +
                "                        of service condition.\n" +
                "                    ");

        // Get the vulnerabilities with the OVALParser
        HashMap<String, Vulnerability> results = op.getVulnerabilities();

        assertEquals(op.getVulnerabilitiesInMemory().get("CVE-2001-1593"), v1);
        assertEquals(op.getVulnerabilitiesInMemory().get("CVE-2002-2443"),v2);
    }
}
