diff --git a/qa/qa/page/project/show.rb b/qa/qa/page/project/show.rb
index 1a9a2fd413fadd5d0511745f050d05e53e1fbcef..9fd668f812b257637151736973a0cf3ce9c1fc1c 100644
--- a/qa/qa/page/project/show.rb
+++ b/qa/qa/page/project/show.rb
@@ -5,6 +5,7 @@ module QA
     module Project
       class Show < Page::Base
         include Page::Component::ClonePanel
+        include Page::Project::SubMenus::Settings

         view 'app/views/layouts/header/_new_dropdown.haml' do
           element :new_menu_toggle
diff --git a/qa/qa/page/project/sub_menus/ci_cd.rb b/qa/qa/page/project/sub_menus/ci_cd.rb
index adae2ce08c4f6673947265111cf0ec0c1024255d..2f0bc8b9ba6cbe3087fc50f439cb9a28aa310753 100644
--- a/qa/qa/page/project/sub_menus/ci_cd.rb
+++ b/qa/qa/page/project/sub_menus/ci_cd.rb
@@ -5,6 +5,8 @@ module QA
     module Project
       module SubMenus
         module CiCd
+          include Page::Project::SubMenus::Common
+
           def self.included(base)
             base.class_eval do
               view 'app/views/layouts/nav/sidebar/_project.html.haml' do
diff --git a/qa/qa/page/project/sub_menus/issues.rb b/qa/qa/page/project/sub_menus/issues.rb
index f81e4f3490993e1497d2a92b4be710172c578d50..8fb8fa06346aa5e425f9affaf633a2396c2c14ec 100644
--- a/qa/qa/page/project/sub_menus/issues.rb
+++ b/qa/qa/page/project/sub_menus/issues.rb
@@ -5,6 +5,8 @@ module QA
     module Project
       module SubMenus
         module Issues
+          include Page::Project::SubMenus::Common
+
           def self.included(base)
             base.class_eval do
               view 'app/views/layouts/nav/sidebar/_project.html.haml' do
diff --git a/qa/qa/page/project/sub_menus/operations.rb b/qa/qa/page/project/sub_menus/operations.rb
index 24a99a9464ca67f718352bb61aec1053d0f1954e..d266cb2141741f8b63aed81b236f671d3058560b 100644
--- a/qa/qa/page/project/sub_menus/operations.rb
+++ b/qa/qa/page/project/sub_menus/operations.rb
@@ -5,6 +5,8 @@ module QA
     module Project
       module SubMenus
         module Operations
+          include Page::Project::SubMenus::Common
+
           def self.included(base)
             base.class_eval do
               view 'app/views/layouts/nav/sidebar/_project.html.haml' do
diff --git a/qa/qa/page/project/sub_menus/repository.rb b/qa/qa/page/project/sub_menus/repository.rb
index 4cc73a6b25a0fd1831a5dbed35daca54acac1448..c53d805c61d56f7307e7da445c11f3d0320a8c2c 100644
--- a/qa/qa/page/project/sub_menus/repository.rb
+++ b/qa/qa/page/project/sub_menus/repository.rb
@@ -5,6 +5,8 @@ module QA
     module Project
       module SubMenus
         module Repository
+          include Page::Project::SubMenus::Common
+
           def self.included(base)
             base.class_eval do
               view 'app/views/layouts/nav/sidebar/_project.html.haml' do
diff --git a/qa/qa/page/project/sub_menus/settings.rb b/qa/qa/page/project/sub_menus/settings.rb
index 88b45ec55ae92fd6ba09c26a36c889da58352b58..1cd39fcff584fc017a894586e3ec482769dd332e 100644
--- a/qa/qa/page/project/sub_menus/settings.rb
+++ b/qa/qa/page/project/sub_menus/settings.rb
@@ -5,6 +5,8 @@ module QA
     module Project
       module SubMenus
         module Settings
+          include Page::Project::SubMenus::Common
+
           def self.included(base)
             base.class_eval do
               view 'app/views/layouts/nav/sidebar/_project.html.haml' do
diff --git a/qa/qa/specs/features/browser_ui/2_plan/issue/check_mentions_for_xss_spec.rb b/qa/qa/specs/features/browser_ui/2_plan/issue/check_mentions_for_xss_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..013cea0a40e4165bcbbdb020fe65adc2bd5ac85f
--- /dev/null
+++ b/qa/qa/specs/features/browser_ui/2_plan/issue/check_mentions_for_xss_spec.rb
@@ -0,0 +1,43 @@
+# frozen_string_literal: true
+
+module QA
+  context 'Plan' do
+    describe 'check xss occurence in @mentions in issues' do
+      let(:issue_title) { 'issue title' }
+
+      it 'user mentions a user in comment' do
+        Runtime::Browser.visit(:gitlab, Page::Main::Login)
+        Page::Main::Login.perform(&:sign_in_using_credentials)
+
+        user = Resource::User.fabricate! do |user|
+          user.name = "eve <img src=x onerror=alert(2)&lt;img src=x onerror=alert(1)&gt;"
+          user.password = "test1234"
+        end
+
+        project = Resource::Project.fabricate! do |resource|
+          resource.name = 'xss-test-for-mentions-project'
+        end
+        project.visit!
+
+        Page::Project::Show.perform(&:go_to_members_settings)
+        Page::Project::Settings::Members.perform do |page|
+          page.add_member(user.username)
+        end
+
+        Resource::Issue.fabricate_via_browser_ui! do |issue|
+          issue.title = issue_title
+          issue.project = project
+        end
+
+        Page::Project::Issue::Show.perform do |show_page|
+          show_page.select_all_activities_filter
+          show_page.comment('cc-ing you here @eve')
+
+          expect do
+            expect(show_page).to have_content("cc-ing you here")
+          end.not_to raise_error # Selenium::WebDriver::Error::UnhandledAlertError
+        end
+      end
+    end
+  end
+end